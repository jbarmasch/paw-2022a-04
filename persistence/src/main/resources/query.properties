event.getFewTicketsEvents=SELECT events.eventid, events.name, events.description, events.locationid, events.attendance, events.ticketsLeft, events.price, \
  events.typeid, events.date, events.imageid, events.userid, events.state, locations.name AS locName, images.image, types.name AS typeName \
  FROM events \
  JOIN locations ON events.locationid = locations.locationid JOIN images ON events.imageid = images.imageid JOIN types ON events.typeid = types.typeid \
  WHERE (events.attendance) >= (4 * events.ticketsLeft) AND events.state != 1 AND events.ticketsLeft > 0 \
  LIMIT 4
event.getUpcomingEvents=SELECT events.eventid, events.name, events.description, events.locationid, events.attendance, events.ticketsLeft, events.price, \
  events.typeid, events.date, events.imageid, events.userid, events.state, locations.name AS locName, images.image, types.name AS typeName \
  FROM events JOIN locations ON events.locationid = locations.locationid JOIN images ON events.imageid = images.imageid JOIN types ON events.typeid = types.typeid \
  WHERE events.date > ? AND events.state != 1 ORDER BY events.date LIMIT 5
event.update=UPDATE events SET name = ?, description = ?, locationid = ?, ticketsLeft = ?, price = ?, typeid = ?, date = ?, imageid = ? WHERE eventid = ?
event.updateNoImage=UPDATE events SET name = ?, description = ?, locationid = ?, ticketsLeft = ?, price = ?, typeid = ?, date = ?, imageid = ? WHERE eventid = ?
#WITH event_cte AS (
#SELECT * FROM event_complete
#WHERE eventId = ?
#)
#
#SELECT *, (SELECT COUNT(*) FROM (SELECT unnest((SELECT tagIds FROM event_cte)) INTERSECT SELECT unnest(tagIds)) AS aux) AS similarity
#FROM (SELECT *
#FROM event_complete e
#WHERE e.typeId = (SELECT typeid FROM event_cte) AND e.locationId = (SELECT locationid FROM event_cte) AND e.eventid <> (SELECT eventid FROM event_cte)) as eliteTt
#ORDER BY similarity DESC;
#
#SELECT *
#FROM (SELECT b.eventId, COUNT(b.userId) AS popularity
#FROM bookings b JOIN (SELECT userId FROM bookings WHERE bookings.eventId = ?) AS aux ON b.userId = aux.userId
#WHERE b.eventid <> ?
#GROUP BY b.eventId
#ORDER BY popularity DESC) AS aux
#JOIN event_complete ec on aux.eventid = ec.eventid

